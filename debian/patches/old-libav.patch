Index: xpra/codecs/dec_avcodec/decoder.pyx
===================================================================
--- a/xpra/codecs/dec_avcodec/decoder.pyx	(revision 4172)
+++ b/xpra/codecs/dec_avcodec/decoder.pyx	(working copy)
@@ -95,8 +95,8 @@
     AVCodec *avcodec_find_decoder(AVCodecID id)
     AVCodecContext *avcodec_alloc_context3(const AVCodec *codec)
     int avcodec_open2(AVCodecContext *avctx, const AVCodec *codec, AVDictionary **options)
-    AVFrame *avcodec_alloc_frame()
-    void avcodec_free_frame(AVFrame **frame)
+    #AVFrame *avcodec_alloc_frame()
+    #void avcodec_free_frame(AVFrame **frame)
     int avcodec_close(AVCodecContext *avctx)
 
     #actual decoding:
@@ -435,7 +435,7 @@
             log.error("could not open codec: %s", self.av_error_str(r))
             self.clean_decoder()
             return  False
-        self.frame = avcodec_alloc_frame()
+        self.frame = <AVFrame *> xmemalign(sizeof(AVFrame))
         if self.frame==NULL:
             log.error("could not allocate an AVFrame for decoding")
             self.clean_decoder()
@@ -484,8 +484,8 @@
 
         log("clean_decoder() freeing AVFrame: %#x", <unsigned long> self.frame)
         if self.frame!=NULL:
-            avcodec_free_frame(&self.frame)
-            #redundant: self.frame = NULL
+            #free(&self.frame)   #freeing here causes a double free on Ubuntu, avcodec_close probably does it too
+            self.frame = NULL
 
         cdef unsigned long ctx_key          #@DuplicatedSignature
         log("clean_decoder() freeing AVCodecContext: %#x", <unsigned long> self.codec_ctx)
