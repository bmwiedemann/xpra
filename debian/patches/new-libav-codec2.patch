Index: xpra/codecs/dec_avcodec2/decoder.pyx
--- a/xpra/codecs/dec_avcodec2/decoder.pyx	(revision 10156)
+++ b/xpra/codecs/dec_avcodec2/decoder.pyx	(working copy)
@@ -54,8 +54,8 @@
     AVPixelFormat AV_PIX_FMT_YUV422P
     AVPixelFormat AV_PIX_FMT_YUV444P
     AVPixelFormat AV_PIX_FMT_RGB24
-    AVPixelFormat AV_PIX_FMT_0RGB
-    AVPixelFormat AV_PIX_FMT_BGR0
+    #AVPixelFormat AV_PIX_FMT_0RGB
+    #AVPixelFormat AV_PIX_FMT_BGR0
     AVPixelFormat AV_PIX_FMT_ARGB
     AVPixelFormat AV_PIX_FMT_BGRA
     AVPixelFormat AV_PIX_FMT_GBRP
@@ -115,8 +115,8 @@
             "YUV422P"   : AV_PIX_FMT_YUV422P,
             "YUV444P"   : AV_PIX_FMT_YUV444P,
             "RGB"       : AV_PIX_FMT_RGB24,
-            "XRGB"      : AV_PIX_FMT_0RGB,
-            "BGRX"      : AV_PIX_FMT_BGR0,
+            #"XRGB"      : AV_PIX_FMT_0RGB,
+            #"BGRX"      : AV_PIX_FMT_BGR0,
             "ARGB"      : AV_PIX_FMT_ARGB,
             "BGRA"      : AV_PIX_FMT_BGRA,
             "GBRP"      : AV_PIX_FMT_GBRP,
@@ -136,8 +136,8 @@
     CODECS.append("h264")
 if avcodec_find_decoder(AV_CODEC_ID_VP8)!=NULL:
     CODECS.append("vp8")
-if avcodec_find_decoder(AV_CODEC_ID_H265)!=NULL:
-    CODECS.append("h265")
+#if avcodec_find_decoder(AV_CODEC_ID_H265)!=NULL:
+#    CODECS.append("h265")
 if avcodec_find_decoder(AV_CODEC_ID_VP9)!=NULL:
     VP9_CS = []
     #there used to be problems with YUV444P with older versions of ffmpeg:
@@ -184,7 +184,8 @@
 def get_input_colorspaces(encoding):
     if encoding not in CODECS:
         return []
-    if encoding in ("h264", "h265"):
+    #if encoding in ("h264", "h265"):
+    if encoding in ("h264", ):
         return COLORSPACES
     elif encoding=="vp8":
         return ["YUV420P"]
@@ -323,8 +324,8 @@
         cdef AVCodecID CodecID
         if self.encoding=="h264":
             CodecID = AV_CODEC_ID_H264
-        elif self.encoding=="h265":
-            CodecID = AV_CODEC_ID_H265
+#        elif self.encoding=="h265":
+#            CodecID = AV_CODEC_ID_H265
         elif self.encoding=="vp8":
             CodecID = AV_CODEC_ID_VP8
         elif self.encoding=="vp9":
